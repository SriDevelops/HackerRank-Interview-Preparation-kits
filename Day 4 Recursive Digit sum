import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'superDigit' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. STRING n
     *  2. INTEGER k
     */

    public static String ConcantenateString (String n, int k){
        //String concStr = "";
      
        String concStr = new String();
        StringBuilder s = new StringBuilder(n);
        long  value = 0;
        long q=0;
      
        for (int i=0;i<s.length();i++){        
        value=value+Character.getNumericValue(s.charAt(i));
       
    }
    
        for(int i=0;i<k;i++){
        q=q+value; 
        System.out.println( " q "+ q); 
    }

    concStr=Long.toString(q); System.out.println( " in fun "+ concStr);
    return concStr;
    }
    
    public static int superDigit(String n, int k) {
      
        int result=0;
        int value=0;
    // Write your code here
   if(k>0){
       n = ConcantenateString(n, k);
       System.out.println(" in if "+ n);
       return superDigit(n, 0);
       
   }
   else while(n.length()!=1){
   
    for (int i=0;i<n.length();i++){  
        System.out.println("in for loop" + i);;      
        value=value+Character.getNumericValue(n.charAt(i));
        System.out.println(" valur" + value);
    }
    return superDigit(Integer.toString(value), 0);
    
    }
    return Character.getNumericValue(n.charAt(0));
    }
    

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        String n = firstMultipleInput[0];

        int k = Integer.parseInt(firstMultipleInput[1]);

        int result = Result.superDigit(n, k);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
